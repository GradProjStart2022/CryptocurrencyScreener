version: "3.2"
services:
  # front-web:
  #   restart: always
  #   command: npm start
  #   container_name: front-web
  #   build:
  #     context: ./frontend/
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:3000"
  #   stdin_open: true
  #   networks:
  #     - app_network

  frontend-nginx:
    #    image: nginx:latest
    container_name: frontend-nginx
    build:
      # context: ./frontend/nginx/.
      context: ./frontend/
      dockerfile: Dockerfile
    command: nginx -g "daemon off;"
    ports:
      - "3000:80"
    expose:
      - "80"
    #    volumes:
    #      - ./nginx:/etc/nginx/conf.d
    #      - ./static:/staticfiles
    # depends_on:
    #   - front-web
    networks:
      - app_network

  back-web:
    build:
      context: ./backend/
      dockerfile: Dockerfile
    container_name: back-web
    command: gunicorn screener.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./static:/usr/src/app/staticfiles
    expose:
      - "8000"
    restart: always
    networks:
      - app_network

  backend-nginx:
    #    image: nginx:latest
    container_name: backend-nginx
    build:
      context: ./backend/nginx/.
      dockerfile: Dockerfile
    ports:
      - "8000:8000/tcp"
    volumes:
      #      - ./nginx:/nginx/defalut.conf
      - ./static:/staticfiles
    depends_on:
      - back-web
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
